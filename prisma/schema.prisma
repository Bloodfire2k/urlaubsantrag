// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum VacationStatus {
  offen
  genehmigt
  abgelehnt
}

model Market {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  address   String?
  phone     String?
  email     String?
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relations
  users User[]

  @@map("markets")
}

model User {
  id         Int      @id @default(autoincrement())
  username   String   @unique
  email      String   @unique
  fullName   String   @map("full_name")
  passwordHash String @map("password_hash")
  role       String   @default("employee")
  marketId   Int      @map("market_id")
  department String
  isActive   Boolean  @default(true) @map("is_active")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  // Relations
  market    Market     @relation(fields: [marketId], references: [id])
  vacations Vacation[]

  // Indexes für Performance
  @@index([marketId, department, isActive])
  @@map("users")
}

model Vacation {
  id          Int            @id @default(autoincrement())
  userId      Int            @map("user_id")
  startDate   DateTime       @map("start_date")
  endDate     DateTime       @map("end_date")
  status      VacationStatus @default(offen)
  description String?        @map("description")
  createdAt   DateTime       @default(now()) @map("created_at")
  updatedAt   DateTime       @updatedAt @map("updated_at")

  // Relations
  user User @relation(fields: [userId], references: [id])

  // Indexes für Performance - besonders wichtig für Datumsabfragen
  @@index([startDate, endDate, status])
  @@index([userId, status])
  @@map("vacations")
}